Hello, my name is Borislav and i am going to make a code review for this app
Keeping in mind that i never used Django before, this is my  view point for this application

We are going to start with the settings.py file which is the configuration file for the Django server

The first thing we see here is that SECRET_KEY variable, which in my opinion shouldn't be here. This is sensitive information
and i rather import this from another file/module for better security

As we go on we can see some of the frameworks that are being used.

REST_FRAMEWORK - which have some features like authentication policies and serialization

DJOSER that is used for authenticating actions through confirmation emails

DJOSER MAIL SECTION i think should also be in a separate file because it is again sensitive information
This stores the configuration for the e-mail that the djoser verification mails are going to be sent from
												############### urls.py ###############
Lets go on with urls.py file
This file is responsible for some of our API endpoints.

This (include car.urls) i think is a bad practice, 
eventhough Django load the paths in the order they are defined in, if Django would load this path for some reason
it would lead to an error because there is no real path with empty route in our car.urls
I would either remove the entire line of code or if we actually need it, add an route to it
												############### carAd/models.py ############### 
The next thing im going to talk about is one of our applications "carAd"
I'm not sure what Ad stands for and maybe this can be named better
First im going to talk about the application models

The models are basically the colum definitions of the tables in the database 

This piece of code here i think can be removed because i didn't see it being used anywhere

Long variable name for no reason

def __str__ method i think it is a big problem because everytime Django is refering to an instance of this model it will return this static string. It should be returning the instance name like in the type class
												############### serializers.py ############### 
serializers are used to pack queried data and unpack it in some format ready for use like json in our views
actually we can see some unused imports here which maybe removed
												############### views.py ############### 
Lets continue with the views
The views are the actual web response from our request

I noticed that in most of the views there are not required permissions for example to delete or update methods like here
Not sure if it is meant to be like that, but i think it shouldn't

Also the naming of these methods shouldn't be like that, because we my have trouble remembering which cases are upper and which are not

Another thing with the views is that many of them can be merged to avoid code repeating like some of the get clases can be merged too the retreive/update/destroy classes
LINE 54
Here we see the same variable assigned 3 times and never been used

Urlpatterns can be merged too since the brackets in int:pk parameter means that it is not required and we can access the path
without it

############### closing speech ############### 
eventhough there are more things to talk about i have to stop here because im going past the given time and the structure for the other applications is the same anyway so thats it

